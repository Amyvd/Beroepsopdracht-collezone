{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mediacollege Amsterdam\\\\bewijzenmap\\\\leerjaar 3\\\\Periode 2\\\\Beroepsopdracht\\\\Beroepsopdracht-collezone\\\\beroepsopdracht2.0\\\\src\\\\Components\\\\Collectiepagina\\\\CollectieDashboard\\\\Dashboard\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [productCards, setProductCards] = useState([]);\n  const [productPrice, setProductPrice] = useState([]);\n  const [open, setOpen] = useState(true);\n  const [cardClicked, setCardClicked] = useState({});\n  const [editMode, setEditMode] = useState(false);\n  const [showAll, setShowAll] = useState(true);\n  const [showAvailable, setShowAvailable] = useState(false);\n  useEffect(() => {\n    setProductCards(productsObject.products);\n  }, []);\n  const onButtonClicked = () => {\n    setOpen(!open);\n  };\n  const addButtonClicked = inputFromPopup => {\n    const imageFromHelper = chooseImage(inputFromPopup);\n    const toBeAdded = [{\n      id: productCards.length + 1,\n      name: inputFromPopup,\n      img: imageFromHelper\n    }];\n    const mergedArrays = productCards.concat(toBeAdded);\n    setProductCards(mergedArrays);\n    setOpen(!open);\n  };\n  const editButtonClicked = inputFromPopup => {\n    const updatedProductCards = productCards.map(product => {\n      if (cardClicked.id === product.id) {\n        product.name = inputFromPopup;\n        return product;\n      } else {\n        return product;\n      }\n    });\n    setProductCards(updatedProductCards);\n    setOpen(true);\n  };\n  const onCardClicked = idFromCard => {\n    if (productCards[idFromCard - 1].name === \"Placeholder\") {\n      setEditMode(false);\n      setOpen(!open);\n      setCardClicked(productCards[idFromCard - 1]);\n      return;\n    }\n    setEditMode(true);\n    setOpen(!open);\n    setCardClicked(productCards[idFromCard - 1]);\n  };\n  console.table(cardClicked);\n  let filteredProductCards = productCards;\n  if (showAvailable) {\n    filteredProductCards = productCards.filter(product => {\n      return product.name !== \"Placeholder\";\n    });\n  } else if (showAll) {\n    filteredProductCards = productCards;\n  }\n  if (open === true) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"dashboard\",\n        children: [/*#__PURE__*/_jsxDEV(Popup, {\n          editButtonClicked: editButtonClicked,\n          editMode: editMode,\n          cardClicked: cardClicked,\n          addButtonClicked: addButtonClicked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(RightPane, {\n          onProductCardClicked: onCardClicked,\n          onButtonClicked: onButtonClicked,\n          productCards: filteredProductCards,\n          headerText: \"Mijn Producten\",\n          buttonSymbol: \"+\",\n          buttonText: \"Voeg een product toe\",\n          showAll: showAll,\n          setShowAll: setShowAll,\n          showAvailable: showAvailable,\n          setShowAvailable: setShowAvailable\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(Popup, {\n      editButtonClicked: editButtonClicked,\n      editMode: editMode,\n      cardClicked: cardClicked,\n      addButtonClicked: addButtonClicked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(RightPane, {\n      onProductCardClicked: onCardClicked,\n      onButtonClicked: onButtonClicked,\n      productCards: filteredProductCards,\n      headerText: \"Mijn Producten\",\n      buttonSymbol: \"+\",\n      buttonText: \"Voeg een product toe\",\n      showAll: showAll,\n      setShowAll: setShowAll,\n      showAvailable: showAvailable,\n      setShowAvailable: setShowAvailable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 7\n  }, this);\n};\n_s(Dashboard, \"llWZ/X7HiVhYpNse9e0hf9sLS88=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["Dashboard","productCards","setProductCards","useState","productPrice","setProductPrice","open","setOpen","cardClicked","setCardClicked","editMode","setEditMode","showAll","setShowAll","showAvailable","setShowAvailable","useEffect","productsObject","products","onButtonClicked","addButtonClicked","inputFromPopup","imageFromHelper","chooseImage","toBeAdded","id","length","name","img","mergedArrays","concat","editButtonClicked","updatedProductCards","map","product","onCardClicked","idFromCard","console","table","filteredProductCards","filter"],"sources":["D:/Mediacollege Amsterdam/bewijzenmap/leerjaar 3/Periode 2/Beroepsopdracht/Beroepsopdracht-collezone/beroepsopdracht2.0/src/Components/Collectiepagina/CollectieDashboard/Dashboard/Dashboard.js"],"sourcesContent":["const Dashboard = () => {\n    const [productCards, setProductCards] = useState([]);\n    const [productPrice, setProductPrice] = useState([]);\n    const [open, setOpen] = useState(true);\n    const [cardClicked, setCardClicked] = useState({});\n    const [editMode, setEditMode] = useState(false);\n    const [showAll, setShowAll] = useState(true);\n    const [showAvailable, setShowAvailable] = useState(false);\n  \n    useEffect(() => {\n      setProductCards(productsObject.products);\n    }, []);\n  \n    const onButtonClicked = () => {\n      setOpen(!open);\n    };\n  \n    const addButtonClicked = (inputFromPopup) => {\n      const imageFromHelper = chooseImage(inputFromPopup);\n      const toBeAdded = [\n        {\n          id: productCards.length + 1,\n          name: inputFromPopup,\n          img: imageFromHelper,\n        },\n      ];\n  \n      const mergedArrays = productCards.concat(toBeAdded);\n      setProductCards(mergedArrays);\n      setOpen(!open);\n    };\n  \n    const editButtonClicked = (inputFromPopup) => {\n      const updatedProductCards = productCards.map((product) => {\n        if (cardClicked.id === product.id) {\n          product.name = inputFromPopup;\n          return product;\n        } else {\n          return product;\n        }\n      });\n      setProductCards(updatedProductCards);\n      setOpen(true);\n    };\n  \n    const onCardClicked = (idFromCard) => {\n      if (productCards[idFromCard - 1].name === \"Placeholder\") {\n        setEditMode(false);\n        setOpen(!open);\n        setCardClicked(productCards[idFromCard - 1]);\n        return;\n      }\n      setEditMode(true);\n      setOpen(!open);\n      setCardClicked(productCards[idFromCard - 1]);\n    };\n  \n    console.table(cardClicked);\n  \n    let filteredProductCards = productCards;\n    if (showAvailable) {\n      filteredProductCards = productCards.filter((product) => {\n        return product.name !== \"Placeholder\";\n      });\n    } else if (showAll) {\n      filteredProductCards = productCards;\n    }\n  \n    if (open === true) {\n      return (\n        <>\n          <article className=\"dashboard\">\n            <Popup\n              editButtonClicked={editButtonClicked}\n              editMode={editMode}\n              cardClicked={cardClicked}\n              addButtonClicked={addButtonClicked}\n            />\n            <RightPane\n              onProductCardClicked={onCardClicked}\n              onButtonClicked={onButtonClicked}\n              productCards={filteredProductCards}\n              headerText=\"Mijn Producten\"\n              buttonSymbol=\"+\"\n              buttonText=\"Voeg een product toe\"\n              showAll={showAll}\n              setShowAll={setShowAll}\n              showAvailable={showAvailable}\n              setShowAvailable={setShowAvailable}\n            />\n          </article>\n        </>\n      );\n    }\n  \n    return (\n      <section>\n        <Popup\n          editButtonClicked={editButtonClicked}\n          editMode={editMode}\n          cardClicked={cardClicked}\n          addButtonClicked={addButtonClicked}\n        />\n        <RightPane\n          onProductCardClicked={onCardClicked}\n          onButtonClicked={onButtonClicked}\n          productCards={filteredProductCards}\n          headerText=\"Mijn Producten\"\n          buttonSymbol=\"+\"\n          buttonText=\"Voeg een product toe\"\n          showAll={showAll}\n          setShowAll={setShowAll}\n          showAvailable={showAvailable}\n          setShowAvailable={setShowAvailable}\n        />\n      </section>\n    );\n  };\n  \n\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}