{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mediacollege Amsterdam\\\\bewijzenmap\\\\leerjaar 3\\\\Periode 2\\\\Beroepsopdracht\\\\Beroepsopdracht-collezone\\\\beroepsopdracht\\\\src\\\\Components\\\\Collectiepagina\\\\Backlog\\\\Form\\\\Form.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { filterProductsByTitle, filterProductsByMaterial } from \"../../../../Helpers/filterProducten\";\nimport { products } from \"../../../Data/products\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst backlogForm = () => {\n  _s();\n  // state voor elke input\n  const [inputs, setInputs] = useState([{\n    id: \"title\",\n    value: \"\",\n    label: \"Title\",\n    filter: filterProductsByTitle\n  }, {\n    id: \"platforms\",\n    value: \"\",\n    label: \"Platform\",\n    filter: filterProductsByMaterial\n  }]);\n  const dispatch = useDispatch();\n\n  // set state voor input value\n\n  const onInputChanged = e => {\n    let copy = [...inputs];\n    copy.map(input => {\n      if (input.id === e.target.id) {\n        input.value = e.target.value;\n      }\n    });\n    setInputs(copy);\n  };\n\n  // on submit filter door elke input tegelijker tijd filtert op elke filter\n\n  const submit = event => {\n    event.preventDefault();\n    let result = products;\n    inputs.forEach(input => {\n      result = input.filter(input.value, result);\n    });\n    dispatch({\n      type: \"FILTEREDPRODUCTS\",\n      payload: result\n    });\n  };\n  const inputsToBeRendered = inputs.map(objectFromStateArray => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form__wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form__label\",\n        htmlFor: objectFromStateArray.id,\n        children: objectFromStateArray.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form__input\",\n        onChange: onInputChanged,\n        type: \"text\",\n        id: objectFromStateArray.id,\n        value: objectFromStateArray.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, objectFromStateArray.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    onSubmit: submit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formInputsWrapper\",\n      children: inputsToBeRendered\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"form__search\",\n      onClick: submit,\n      children: \"SEARCH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(backlogForm, \"fduVBF4Mku+33euhXpYs/el1CIg=\", false, function () {\n  return [useDispatch];\n});\nexport default backlogForm;","map":{"version":3,"names":["useState","useDispatch","filterProductsByTitle","filterProductsByMaterial","products","backlogForm","inputs","setInputs","id","value","label","filter","dispatch","onInputChanged","e","copy","map","input","target","submit","event","preventDefault","result","forEach","type","payload","inputsToBeRendered","objectFromStateArray"],"sources":["D:/Mediacollege Amsterdam/bewijzenmap/leerjaar 3/Periode 2/Beroepsopdracht/Beroepsopdracht-collezone/beroepsopdracht/src/Components/Collectiepagina/Backlog/Form/Form.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {filterProductsByTitle, filterProductsByMaterial} from \"../../../../Helpers/filterProducten\";\r\nimport {products} from \"../../../Data/products\";\r\n\r\nconst backlogForm = () =>{\r\n\r\n    // state voor elke input\r\n    const [inputs, setInputs] = useState([\r\n        {\r\n            id: \"title\",\r\n            value: \"\",\r\n            label: \"Title\",\r\n            filter: filterProductsByTitle\r\n        },\r\n        {\r\n            id: \"platforms\",\r\n            value: \"\",\r\n            label: \"Platform\",\r\n            filter: filterProductsByMaterial\r\n        },\r\n      \r\n    ]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // set state voor input value\r\n\r\n    const onInputChanged = (e) =>{\r\n        let copy = [...inputs];\r\n        copy.map(input => {\r\n            if(input.id === e.target.id){\r\n                input.value = e.target.value;\r\n            }\r\n        })\r\n        setInputs(copy);\r\n    }\r\n\r\n    // on submit filter door elke input tegelijker tijd filtert op elke filter\r\n\r\n    const submit = (event) =>{\r\n        event.preventDefault();\r\n        let result = products;\r\n        inputs.forEach(input => {\r\n            result = input.filter(input.value, result);\r\n        })\r\n        dispatch({type: \"FILTEREDPRODUCTS\", payload: result})\r\n    }\r\n\r\n    const inputsToBeRendered = inputs.map(objectFromStateArray => {\r\n        return(\r\n            <div key={objectFromStateArray.id} className=\"form__wrapper\">\r\n                <label className=\"form__label\" htmlFor={objectFromStateArray.id}>{objectFromStateArray.label}</label>\r\n                <input className=\"form__input\" onChange={onInputChanged} type=\"text\" id={objectFromStateArray.id} value={objectFromStateArray.value}/>\r\n            </div>\r\n        );\r\n    })\r\n\r\n    return(\r\n        <form className=\"form\" onSubmit={submit}>\r\n            <div className=\"formInputsWrapper\">\r\n                {inputsToBeRendered}\r\n            </div>\r\n            <button className=\"form__search\" onClick={submit}>SEARCH</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default backlogForm;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAAQC,qBAAqB,EAAEC,wBAAwB,QAAO,qCAAqC;AACnG,SAAQC,QAAQ,QAAO,wBAAwB;AAAC;AAEhD,MAAMC,WAAW,GAAG,MAAK;EAAA;EAErB;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,CACjC;IACIQ,EAAE,EAAE,OAAO;IACXC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAET;EACZ,CAAC,EACD;IACIM,EAAE,EAAE,WAAW;IACfC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,UAAU;IACjBC,MAAM,EAAER;EACZ,CAAC,CAEJ,CAAC;EAEF,MAAMS,QAAQ,GAAGX,WAAW,EAAE;;EAE9B;;EAEA,MAAMY,cAAc,GAAIC,CAAC,IAAI;IACzB,IAAIC,IAAI,GAAG,CAAC,GAAGT,MAAM,CAAC;IACtBS,IAAI,CAACC,GAAG,CAACC,KAAK,IAAI;MACd,IAAGA,KAAK,CAACT,EAAE,KAAKM,CAAC,CAACI,MAAM,CAACV,EAAE,EAAC;QACxBS,KAAK,CAACR,KAAK,GAAGK,CAAC,CAACI,MAAM,CAACT,KAAK;MAChC;IACJ,CAAC,CAAC;IACFF,SAAS,CAACQ,IAAI,CAAC;EACnB,CAAC;;EAED;;EAEA,MAAMI,MAAM,GAAIC,KAAK,IAAI;IACrBA,KAAK,CAACC,cAAc,EAAE;IACtB,IAAIC,MAAM,GAAGlB,QAAQ;IACrBE,MAAM,CAACiB,OAAO,CAACN,KAAK,IAAI;MACpBK,MAAM,GAAGL,KAAK,CAACN,MAAM,CAACM,KAAK,CAACR,KAAK,EAAEa,MAAM,CAAC;IAC9C,CAAC,CAAC;IACFV,QAAQ,CAAC;MAACY,IAAI,EAAE,kBAAkB;MAAEC,OAAO,EAAEH;IAAM,CAAC,CAAC;EACzD,CAAC;EAED,MAAMI,kBAAkB,GAAGpB,MAAM,CAACU,GAAG,CAACW,oBAAoB,IAAI;IAC1D,oBACI;MAAmC,SAAS,EAAC,eAAe;MAAA,wBACxD;QAAO,SAAS,EAAC,aAAa;QAAC,OAAO,EAAEA,oBAAoB,CAACnB,EAAG;QAAA,UAAEmB,oBAAoB,CAACjB;MAAK;QAAA;QAAA;QAAA;MAAA,QAAS,eACrG;QAAO,SAAS,EAAC,aAAa;QAAC,QAAQ,EAAEG,cAAe;QAAC,IAAI,EAAC,MAAM;QAAC,EAAE,EAAEc,oBAAoB,CAACnB,EAAG;QAAC,KAAK,EAAEmB,oBAAoB,CAAClB;MAAM;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA,GAFhIkB,oBAAoB,CAACnB,EAAE;MAAA;MAAA;MAAA;IAAA,QAG3B;EAEd,CAAC,CAAC;EAEF,oBACI;IAAM,SAAS,EAAC,MAAM;IAAC,QAAQ,EAAEW,MAAO;IAAA,wBACpC;MAAK,SAAS,EAAC,mBAAmB;MAAA,UAC7BO;IAAkB;MAAA;MAAA;MAAA;IAAA,QACjB,eACN;MAAQ,SAAS,EAAC,cAAc;MAAC,OAAO,EAAEP,MAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9D;AAEf,CAAC;AAAA,GA7DKd,WAAW;EAAA,QAmBIJ,WAAW;AAAA;AA4ChC,eAAeI,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}